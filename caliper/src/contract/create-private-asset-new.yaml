test:
  name: create-private-asset
  description: >-
    This is a duration based benchmark targeting a Hyperledger Fabric network
    using the `basic` NodeJS chaincode
    contract that is interacted with via a Fabric-SDK-Node Gateway. Each test
    round invokes the `createPrivateAsset` method, with successive rounds
    increasing the byteSize of the asset added into the Private Data 
    Collection of the authorized organization.
  workers:
    type: local
    number: 5
  rounds:
    - label: create-private-asset-8000-fixed-tps
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `basic` Smart Contract method named `createPrivateAsset`, which
        inserts an asset of size 8000 bytes into the Private Data Collection
        of the authorized organization at a fixed TPS rate.
      contractId: basic
      txDuration: 10
      rateControl:
        type: fixed-rate
        opts:
          tps: 15
      workload:
        module: lib/create-private-asset.js
        arguments:
          contractId: basic
          byteSize: 8000
    - label: create-private-asset-100
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `basic` Smart Contract method named `createPrivateAsset`, which
        inserts an asset of size 100 bytes into the Private Data Collection
        of the authorized organization.
      contractId: basic
      txDuration: 30
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: lib/create-private-asset.js
        arguments:
          contractId: basic
          byteSize: 100
    - label: create-private-asset-200
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `basic` Smart Contract method named `createPrivateAsset`, which
        inserts an asset of size 200 bytes into the Private Data Collection
        of the authorized organization.
      contractId: basic
      txDuration: 20
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: lib/create-private-asset.js
        arguments:
          contractId: basic
          byteSize: 200
    - label: create-private-asset-500
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `basic` Smart Contract method named `createPrivateAsset`, which
        inserts an asset of size 500 bytes into the Private Data Collection
        of the authorized organization.
      contractId: basic
      txDuration: 300
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: lib/create-private-asset.js
        arguments:
          contractId: basic
          byteSize: 500
    - label: create-private-asset-1000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `basic` Smart Contract method named `createPrivateAsset`, which
        inserts an asset of size 1000 bytes into the Private Data Collection
        of the authorized organization.
      contractId: basic
      txDuration: 30
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: lib/create-private-asset.js
        arguments:
          contractId: basic
          byteSize: 1000
    - label: create-private-asset-2000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `basic` Smart Contract method named `createPrivateAsset`, which
        inserts an asset of size 2000 bytes into the Private Data Collection
        of the authorized organization.
      contractId: basic
      txDuration: 20
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: lib/create-private-asset.js
        arguments:
          contractId: basic
          byteSize: 2000
    - label: create-private-asset-5000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `basic` Smart Contract method named `createPrivateAsset`, which
        inserts an asset of size 5000 bytes into the Private Data Collection
        of the authorized organization.
      contractId: basic
      txDuration: 40
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: lib/create-private-asset.js
        arguments:
          contractId: basic
          byteSize: 5000
    - label: create-private-asset-10000
      description: >-
        Test a submitTransaction() Gateway method against the NodeJS
        `basic` Smart Contract method named `createPrivateAsset`, which
        inserts an asset of size 10000 bytes into the Private Data Collection 
        of the authorized organization.
      contractId: basic
      txDuration: 30
      rateControl:
        type: fixed-load
        opts:
          transactionLoad: 10
          startingTps: 1
      workload:
        module: lib/create-private-asset.js
        arguments:
          contractId: basic
          byteSize: 10000
monitors:
    resource:
    - module: docker
      options:
        interval: 4
        containers: [all]
      charting:
        bar:
          metrics: [Memory(avg),CPU%(avg)]
        polar:
          metrics: [all]
          
observer:
  type: local
  interval: 5
